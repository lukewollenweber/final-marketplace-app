const mongoose = require('mongoose')
//schema for user
const UserSchema = mongoose.Schema({
    //name, username, balance are rows
    name:{type:String,required:true},
    user_name:{type:String,required:true,unique:true},
    balance:{type:Number,default:100},
    password:{type:String,required:true}
})
//virtual field for products
UserSchema.virtual('products',{
    //references the product collection
    ref:'Product',
    //local and foreign fields
    localField:'_id',
    foreignField:'owner'
})
//sets them to virtuals
UserSchema.set('toJSON',{virtuals: true})
UserSchema.set('toObject',{virtuals:true})
//model set and exported
const User = mongoose.model("User",UserSchema,"users")
module.exports = User

// 1) User (_id will be autogenerated)
// a. name (String, required)
// b. user_name(String, required)
// c. balance(Number, default:100)
// In addition, you will be creating a virtual field called “items” that will hold the products the user
// owns.
// 2) Product (_id will be autogenerated)
// a. name(String, required)
// b. price(Number, required)
// c. owner(ObjectID, will reference the _id field of a document in the User collection)

// userSchema.virtual('posts',{
//     ref:'Post',
//     localField:'_id',
//     foreignField:'author'
//     })
    // userSchema.set('toJSON',{virtuals: true})
    // userSchema.set('toObject',{virtuals:true})
//     This essentially creates a field in the User
//     Model that will store the user posts.
//     However, this is a virtual field, so no actual
//     post data is stored. Instead, the
//     • ref: Tells Mongoose which collection to
//     look at
//     • localField: Tells mongoose which field to
//     match in the user collection
//     • foreignField: Tells mongoose which field to
//     match in the posts collection
//     **The name of the virtual field(posts) can be
//     named anything (e.g. entries, blogs etc.)The toJSON and toObject configuration simply means when a
//     user document is retrieved and made available as a plain JS
//     object/JSON string, whether or not the posts should be
//     included as well. By default, this is false.